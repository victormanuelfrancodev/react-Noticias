{"version":3,"sources":["componentes/Header.js","componentes/Noticia.js","componentes/Noticias.js","componentes/Formulario.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Noticia","_props$noticia","noticia","urlToImage","url","title","description","source","imagen","src","alt","name","href","target","Noticias","react_transition_group","this","noticias","map","key","classNames","timeout","componentes_Noticia","Component","Formulario","categoriaRef","React","createRef","cambiarCategoria","e","preventDefault","_this","consultarNoticias","current","value","onSubmit","ref","defaultValue","type","App","state","categoria","arguments","length","undefined","concat","console","log","fetch","then","respuesta","json","articles","setState","componentes_Header","componentes_Formulario","componentes_Noticias","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b0d3220.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n  return (\n    <nav>\n      <div className= \"nav-wrapper light-blue darken-3\">\n          <a className=\"brand-logo center\">{props.titulo}</a>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Noticia = (props) => {\n\n  const {\n      urlToImage,url,title,description,source\n  } = props.noticia;\n\n  const imagen = (urlToImage) ?\n  <div className= \"card-image\">\n    <img src={urlToImage} alt={title}/>\n    <span className=\"card-title\">{source.name}</span>\n  </div>\n  :\n  '';\n\n  return (\n    <div className=\"col s12 m6 14\">\n      <div className =\"card\">\n        {imagen}\n      </div>\n      <div className=\"card-content\">\n        <h3>{title}</h3>\n        <p>{description}</p>\n      </div>\n      <div className=\"card-action\">\n        <a href={url} target=\"_blank\"\n        className=\"waves-effects waves-light btn\">\n          Leer m√°s\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Noticia;\n","import React, {Component} from 'react';\nimport Noticia from './Noticia';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nclass Noticias extends Component{\n  render() {\n    return (\n          <div className = \"row\">\n             <TransitionGroup>\n\n                  {this.props.noticias.map(noticia =>(\n                    <CSSTransition\n                        key = {noticia.url}\n                        classNames=\"fade\"\n                        timeout = {500}\n                    >\n                      <Noticia\n\n                          noticia = {noticia}\n                      />\n                    </CSSTransition>\n                  ))}\n              </TransitionGroup>\n          </div>\n    )\n  }\n}\n\nexport default Noticias;\n","import React, {Component} from 'react';\n\nclass Formulario extends Component{\n\n  categoriaRef = React.createRef();\n\n  cambiarCategoria = (e) =>{\n      e.preventDefault();\n    \n      this.props.consultarNoticias(this.categoriaRef.current.value);\n  }\n\n  render() {\n    return (\n          <div className=\"buscador row\">\n            <div className =\"col s12 m8 offset-m2\">\n              <form onSubmit={this.cambiarCategoria}>\n                <h2>Noticias por categoria</h2>\n                <div className=\"input-field col s12 m8\">\n                  <select ref={this.categoriaRef}>\n                    <option value=\"general\" defaultValue>General</option>\n                    <option value=\"business\" defaultValue>Negocios</option>\n                    <option value=\"science\" defaultValue>Ciencia</option>\n                    <option value=\"health\" defaultValue>Salud</option>\n                    <option value=\"sports\" defaultValue>Deportes</option>\n                    <option value=\"technology\" defaultValue>Tecnologia</option>\n                  </select>\n                </div>\n                <div className=\"input-field col s12 m4 enviar\">\n                  <input type=\"submit\" className=\"btn amber darken-2\" value=\"Buscar\"/>\n                </div>\n              </form>\n            </div>\n          </div>\n    )\n  }\n}\n\nexport default Formulario;\n","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Noticias from './componentes/Noticias';\nimport Formulario from './componentes/Formulario';\nimport './index.css';\n\nclass App extends Component {\n\n  state = {\n    noticias : []\n  }\n  componentDidMount(){\n    this.consultarNoticias();\n  }\n\n  consultarNoticias = (categoria='general') => {\n    let url = `https://newsapi.org/v2/top-headlines?country=mx&category=${categoria}&apiKey=b8b6febf2cad4cbb9bb1e77f3dde1e75`;\n    console.log(categoria);\n    fetch(url)\n      .then(respuesta => {\n        return respuesta.json();\n      })\n      .then(noticias =>{\n        console.log(noticias.articles);\n        this.setState({\n          noticias : noticias.articles\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor-app\">\n        <Header\n          titulo=\"Noticias\"\n          />\n          <Formulario\n            consultarNoticias ={this.consultarNoticias}\n          />\n          <div className = \"container white contenedor-noticias\">\n              <Noticias\n                noticias = {this.state.noticias}\n              />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}